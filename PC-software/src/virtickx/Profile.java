/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtickx;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JRootPane;
/**
 *
 * @author Dell
 */
public class Profile extends javax.swing.JFrame {

    /**
     * Creates new form Profile
     */
    public Profile() {
        setUndecorated(true);  
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(38, 149, 206));

        jLabel1.setBackground(new java.awt.Color(38, 149, 206));
        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 45)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dell\\Desktop\\settings-icon-vector-80198412.png")); // NOI18N
        jLabel1.setText("Settings Profile");

        jRadioButton1.setBackground(new java.awt.Color(38, 149, 206));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Footlight MT Light", 1, 48)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Settings 1");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(38, 149, 206));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Footlight MT Light", 1, 48)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Settings 2");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(38, 149, 206));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Footlight MT Light", 1, 48)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("Settings 3");
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(38, 149, 206));
        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Footlight MT Light", 1, 48)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("Settings 4");
        jRadioButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton4MouseClicked(evt);
            }
        });
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setBackground(new java.awt.Color(38, 149, 206));
        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Footlight MT Light", 1, 48)); // NOI18N
        jRadioButton5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setText("Settings 5");
        jRadioButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton5MouseClicked(evt);
            }
        });
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(38, 149, 206));
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dell\\Desktop\\Done3.jpg")); // NOI18N
        jButton2.setText("Done");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton5))))
                .addContainerGap(260, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(52, 52, 52))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton5)
                .addGap(9, 9, 9)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        selected =0;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        selected =1;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        selected =2;
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        selected =3;
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        selected =4;
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        long deltime=System.currentTimeMillis()-PrevTime_1;
        if((deltime<=500||evt.getButton()==evt.BUTTON3)&&(RenameDone))
        {
            RenameDone=false;
            Thread rename=new Thread()
            {
                public void run()
                {
                RenameSettings rename=new RenameSettings();
                rename.setVisible(true);
                while(rename.Screenoff)
                    System.out.println("");
                jRadioButton1.setText(rename.input);
                ProfileNames[0]=rename.input;
                RenameDone=true;
            }
        };
        rename.start();
 
        }
        PrevTime_1=System.currentTimeMillis();
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updateProfileNames();
        recoverData();
        close();
        ScreenOn=false;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        long deltime=System.currentTimeMillis()-PrevTime_2;
        if((deltime<=500||evt.getButton()==evt.BUTTON3)&&(RenameDone))
        {
            RenameDone=false;
            Thread rename=new Thread()
            {
                public void run()
                {
                    RenameSettings rename=new RenameSettings();
                    rename.setVisible(true);
                    while(rename.Screenoff)
                        System.out.println("");
                    jRadioButton2.setText(rename.input);
                    ProfileNames[1]=rename.input;
                    RenameDone=true;
                }
            };
            rename.start();
            
        }
        PrevTime_2=System.currentTimeMillis();
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        long deltime=System.currentTimeMillis()-PrevTime_3;
        if((deltime<=500||evt.getButton()==evt.BUTTON3)&&(RenameDone))
        {
            RenameDone=false;
            Thread rename=new Thread()
            {
                public void run()
                {
                    RenameSettings rename=new RenameSettings();
                    rename.setVisible(true);
                    while(rename.Screenoff)
                        System.out.println("");
                    jRadioButton3.setText(rename.input);
                    ProfileNames[2]=rename.input;
                    RenameDone=true;
                }
            };
            rename.start();
        }
        PrevTime_3=System.currentTimeMillis();
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jRadioButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton4MouseClicked
        long deltime=System.currentTimeMillis()-PrevTime_4;
        if((deltime<=500||evt.getButton()==evt.BUTTON3)&&(RenameDone))
        {
            RenameDone=false;
            Thread rename=new Thread()
            {
                public void run()
                {
                    RenameSettings rename=new RenameSettings();
                    rename.setVisible(true);
                    while(rename.Screenoff)
                        System.out.println("");
                    jRadioButton4.setText(rename.input);
                    ProfileNames[3]=rename.input;
                    RenameDone=true;
                }
            };
            rename.start();
        }
        PrevTime_4=System.currentTimeMillis();
    }//GEN-LAST:event_jRadioButton4MouseClicked

    private void jRadioButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton5MouseClicked
        long deltime=System.currentTimeMillis()-PrevTime_5;
        if((deltime<=500||evt.getButton()==evt.BUTTON3)&&(RenameDone))
        {
            RenameDone=false;
            Thread rename=new Thread()
            {
                public void run()
                {
                    RenameSettings rename=new RenameSettings();
                    rename.setVisible(true);
                    while(rename.Screenoff)
                        System.out.println("");
                    jRadioButton5.setText(rename.input);
                    ProfileNames[4]=rename.input;
                    RenameDone=true;
                }
            };
            rename.start();
        }
        PrevTime_5=System.currentTimeMillis();
    }//GEN-LAST:event_jRadioButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
        
    }
    String FileNames[]={"C:\\AndroidJoystick\\AndroidJoystick1.txt","C:\\AndroidJoystick\\AndroidJoystick2.txt","C:\\AndroidJoystick\\AndroidJoystick3.txt","C:\\AndroidJoystick\\AndroidJoystick4.txt","C:\\AndroidJoystick\\AndroidJoystick5.txt"};
    String Profile="C:\\AndroidJoystick\\ProfileSettings.txt",selectedSetting="";
    String ProfileNames[]={"Settings 1","Settings 2","Settings 3","Settings 4","Settings 5"};
    protected int SensorStatus=0,MouseSensetivityX=0,MouseSensetivityY=0;
    protected boolean MouseRequired=false,ScreenOn=true;
    int keypress1[]={-1,-1,-1,-1};
    int keypress2[]={-1,-1,-1,-1};
    int keypress4[]={-1,-1,-1,-1,-1,-1};
    int selected=0;
    long PrevTime_1=0,PrevTime_2=0,PrevTime_3=0,PrevTime_4=0,PrevTime_5=0;
    boolean RenameDone=true;
    boolean ErrorShutdown=false,NamesUpdateNotDone=false,ImportError=false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    // End of variables declaration//GEN-END:variables
    public void close()
    {
        WindowEvent close_window=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(close_window);
    }
    public void createFolderAndFiles() throws IOException
    {
        File folder=new File("C:\\AndroidJoystick");
        if(!folder.exists())
            folder.mkdir();
        File profile=new File(Profile);
        if(!profile.exists()&&!ErrorShutdown)
        {
            FileOutputStream fout = null;            
            try {
                profile.createNewFile();
                profile.setReadable(true);
                profile.setWritable(true);
                fout = new FileOutputStream(profile);
                ObjectOutputStream oouts=new ObjectOutputStream(fout);
                oouts.writeUTF("Settings 1");
                oouts.writeUTF("Settings 2");
                oouts.writeUTF("Settings 3");
                oouts.writeUTF("Settings 4");
                oouts.writeUTF("Settings 5");
                oouts.close();
                fout.close();
                profile.setWritable(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } 
        }
        File file1=new File(FileNames[0]);
        if(!file1.exists()&&!ErrorShutdown)
        {
            FileOutputStream fout = null;            
            try {
                file1.createNewFile();
                fout = new FileOutputStream(file1);
                file1.setReadable(true);
                file1.setWritable(true);
                fout.write(47);
                fout.write(49);
                fout.write(45);
                fout.write(51);
                fout.write(1);
                fout.write(4);
                fout.write(19);
                fout.write(23);
                fout.write(1);
                fout.write(3);
                fout.write(3);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.close();
                file1.setWritable(false);
                FileInputStream fin=new FileInputStream(file1);
                int i=0;
                while((i=fin.read())!=-1)
                    System.out.println(i);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } 
            
            
        }
        File file2=new File(FileNames[1]);
        if(!file2.exists()&&!ErrorShutdown)
        {
            try {
                file2.createNewFile();
                FileOutputStream fout=new FileOutputStream(file2);
                file2.setReadable(true);
                file2.setWritable(true);
                fout.write(47);
                fout.write(49);
                fout.write(45);
                fout.write(51);
                fout.write(1);
                fout.write(4);
                fout.write(19);
                fout.write(23);
                fout.write(1);
                fout.write(3);
                fout.write(3);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.close();
                file2.setWritable(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                error.ScreenOn=true;
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } 
        }
        File file3=new File(FileNames[2]);
        if(!file3.exists()&&!ErrorShutdown)
        {
            try{
                file3.createNewFile();
                FileOutputStream fout=new FileOutputStream(file3);
                file3.setReadable(true);
                file3.setWritable(true);
                fout.write(47);
                fout.write(49);
                fout.write(45);
                fout.write(51);
                fout.write(1);
                fout.write(4);
                fout.write(19);
                fout.write(23);
                fout.write(1);
                fout.write(3);
                fout.write(3);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.close();
                file3.setWritable(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } 
        }
        File file4=new File(FileNames[3]);
        if(!file4.exists()&&!ErrorShutdown)
        {
            try{
                file4.createNewFile();
                FileOutputStream fout=new FileOutputStream(file4);
                file4.setReadable(true);
                file4.setWritable(true);
                fout.write(47);
                fout.write(49);
                fout.write(45);
                fout.write(51);
                fout.write(1);
                fout.write(4);
                fout.write(19);
                fout.write(23);
                fout.write(1);
                fout.write(3);
                fout.write(3);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.close();
                file4.setWritable(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } 
        }
        File file5=new File(FileNames[4]);
        if(!file5.exists()&&!ErrorShutdown)
        {
            try{
                file5.createNewFile();
                FileOutputStream fout=new FileOutputStream(file5);
                file5.setReadable(true);
                file5.setWritable(true);
                fout.write(47);
                fout.write(49);
                fout.write(45);
                fout.write(51);
                fout.write(1);
                fout.write(4);
                fout.write(19);
                fout.write(23);
                fout.write(1);
                fout.write(3);
                fout.write(3);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.write(0);
                fout.close();
                file5.setWritable(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            } catch (IOException ex) {
                Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
                Error error=new Error();
                error.setVisible(true);
                try{Thread.sleep(5000);}
                catch(InterruptedException e){}
                error.close();
                ErrorShutdown=true;
            }   
        }
    }
    public void recoverData()
    {
        try {
            File file=new File(FileNames[selected]);
            FileInputStream fin = new FileInputStream(file);
            for(int i=0;i<4;i++)
                keypress1[i]=fin.read();
            for(int i=0;i<4;i++)
                keypress2[i]=fin.read();
            int mouse=fin.read();
            if(mouse==1&&SensorStatus==1)
                MouseRequired=true;
            else
                MouseRequired=false;
            MouseSensetivityX=fin.read();
            MouseSensetivityY=fin.read();
            for(int i=0;i<4;i++)
                keypress4[i]=fin.read();
            fin.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            ImportError=true;
            ErrorShutdown=true;
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            ImportError=true;
            ErrorShutdown=true;
        } 
    }
    public void setNames()
    {
        FileInputStream fout = null;
        try {
            File prof=new File(Profile);
            prof.createNewFile();
            prof.setReadable(true);
            prof.setWritable(true);
            fout = new FileInputStream(prof);
            ObjectInputStream oouts=new ObjectInputStream(fout);
            for(int i=0;i<5;i++)
            ProfileNames[i]=oouts.readUTF();
            oouts.close();
            fout.close();
            prof.setWritable(false);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            Error error=new Error();
            error.setVisible(true);
            try{Thread.sleep(5000);}
            catch(InterruptedException e){}
            error.close();
            ErrorShutdown=true;
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            Error error=new Error();
            error.setVisible(true);
            try{Thread.sleep(5000);}
            catch(InterruptedException e){}
            error.close();
            ErrorShutdown=true;
        } 
            jRadioButton1.setText(ProfileNames[0]);
            jRadioButton2.setText(ProfileNames[1]);
            jRadioButton3.setText(ProfileNames[2]);
            jRadioButton4.setText(ProfileNames[3]);
            jRadioButton5.setText(ProfileNames[4]);
            if(selected==0)
               jRadioButton1.setSelected(true);
           else if(selected==1)
               jRadioButton2.setSelected(true);
           else if(selected==2)
               jRadioButton3.setSelected(true);
            if(selected==3)
                jRadioButton4.setSelected(true);
            if(selected==4)
                jRadioButton5.setSelected(true);
    }
    public void updateProfileNames()
    {
        try {
            File prof=new File(Profile);
            prof.createNewFile();
            prof.setReadable(true);
            prof.setWritable(true);
            FileOutputStream fout=new FileOutputStream(prof);
            ObjectOutputStream oouts=new ObjectOutputStream(fout);
            for(int i=0;i<5;i++)
               oouts.writeUTF(ProfileNames[i]);
            oouts.close();
            fout.close();
            prof.setWritable(false);
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            NamesUpdateNotDone=true;
        }
            
    }
    public void updateFiles()
    {
        FileOutputStream fout = null;
        try {
            File fil=new File(FileNames[selected]);
            fil.setReadable(true);
            fil.setWritable(true);
            fout = new FileOutputStream(fil);
            fil.setWritable(true);
            for(int i=0;i<4;i++)
                fout.write(keypress1[i]);
            for(int i=0;i<4;i++)
                fout.write(keypress2[i]);
            if(MouseRequired)
                fout.write(1);
            else
                fout.write(0);
            fout.write(MouseSensetivityX);
            fout.write(MouseSensetivityY);
            for(int i=0;i<4;i++)
                fout.write(keypress4[i]);
            fil.setWritable(false);
            fout.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            UpdationError error=new UpdationError();
            error.setVisible(true);
            try{Thread.sleep(5000);}
            catch(InterruptedException e){}
            error.close();
        } catch (IOException ex) {
            Logger.getLogger(Profile.class.getName()).log(Level.SEVERE, null, ex);
            UpdationError error=new UpdationError();
            error.setVisible(true);
            try{Thread.sleep(5000);}
            catch(InterruptedException e){}
            error.close();
        }      
    }
    
    
}
